<?php

namespace Bin\Controllers\Web;

use Bin\Models\Kelas;
use Snake\Core\Http\Request;
use Bin\Controllers\Controller;
use Snake\Core\Http\Validator;

class KelasController extends Controller {
  /**
   * Display a listing of the resource.
   *
   * @return void
   */
  public function index() {
    $classes = Kelas::all();
    $username = session()->get('user')['username'];

    static::view('pages.admin.kelas.index', [
      'data' => $classes,
      'username' => $username
    ]);
  }

  /**
   * Show the form for creating a new resource.
   *
   * @return void
   */
  public function create() {
    return static::view('pages.admin.kelas.create', [
      'bypass' => false
    ]);
  }

  /**
   * Store a newly created resource in storage.
   *
   * @param Request $request
   *
   * @return void
   */
  public function store(Request $request) {
    $form = Validator::make($request->all(), [
      'name' => ['required', 'str', 'max:255'],
      'description' => ['required', 'str', 'max:255']
    ]);

    input_set_old('name', $form->get('name'));
    input_set_old('description', $form->get('description'));

    if ($form->fails()) return static::view('pages.admin.kelas.create', [
      'error_form' => $form->failed()
    ]);

    Kelas::query("insert into classes (name, description) values ('" . $form->get('name') . "', '" . $form->get('description') . "')");

    $bypass = session()->exists('user');

    input_delete_old('name');
    input_delete_old('description');

    if (!$bypass) return static::view('pages.admin.kelas.create', [
      'bypass' => true
    ]);

    redirect('/admin/kelas');
  }

  /**
   * Show the form for editing the specified resource.
   *
   * @return void
   */
  public function edit(Request $request) {
    $id = $request->get("id");

    if (empty($id)) return static::view('pages.admin.kelas.index', [
      'error' => 'ID tidak boleh kosong'
    ]);

    $username = session()->get('user')['username'];
    $class = Kelas::query("select * from classes where id = " . $id)->fetch();

    static::view('pages.admin.kelas.edit', [
      'data' => $class,
      'username' => $username
    ]);
  }

  /**
   * Update specified resource.
   *
   * @return void
   */
  public function update(Request $request) {
    $id = $request->get("id");

    if (empty($id)) return static::view('pages.admin.kelas.index', [
      'error' => 'ID tidak boleh kosong'
    ]);

    $form = Validator::make($request->all(), [
      'name' => ['required', 'str', 'max:255'],
      'description' => ['required', 'str', 'max:255']
    ]);

    if ($form->fails()) return static::view('pages.admin.kelas.edit', [
      'data' => $request->all(),
      'error_form' => $form->failed()
    ]);

    Kelas::query("update classes set name = '" . $form->get('name') . "', description = '" . $form->get('description') . "' where id = " . $id);

    redirect('/admin/kelas');
  }

  /**
   * Delete specified resource.
   *
   * @return void
   */
  public function destroy(Request $request) {
    $id = $request->get("id");

    if (empty($id)) return static::view('pages.admin.kelas.index', [
      'error' => 'ID tidak boleh kosong'
    ]);

    Kelas::query("delete from classes where id = " . $id);

    redirect('/admin/kelas');
  }
}
