<?php

namespace Bin\Controllers\Web;

use Bin\Models\Kelas;
use Snake\Core\Http\Request;
use Bin\Controllers\Controller;

class KelasController extends Controller {
  /**
   * Display a listing of the resource.
   *
   * @return void
   */
  public function index() {
    $classes = Kelas::all();
    $data = session()->get('user');

    static::view('pages.admin.kelas.index', [
      'data' => $classes,
      'username' => $data['username']
    ]);
  }

  /**
   * Store a newly created resource in storage.
   *
   * @param  \Snake\Core\Http\Request  $request
   *
   * @return void
   */
  public function store(Request $request) {
    if ($request->method() === 'GET') {
      return static::view('pages.admin.kelas.create');
    }

    $data = $request->all();

    if (empty($data['name'])) {
      return static::view('pages.admin.kelas.index', [
        'error' => 'Nama tidak boleh kosong'
      ]);
    }

    if (empty($data['description'])) {
      return static::view('pages.admin.kelas.index', [
        'error' => 'Deskripsi tidak boleh kosong'
      ]);
    }

    Kelas::query("insert into classes (name, description) values ('" . $data['name'] . "', '" . $data['description'] . "')");

    return $this->index();
  }

  /**
   * Display specified resource.
   *
   * @return void
   */
  public function show(Request $request) {
    $id = $request->get("id");

    if (empty($id)) {
      return static::view('pages.admin.kelas.index', [
        'error' => 'ID tidak boleh kosong'
      ]);
    }

    $data = session()->get('user');
    $class = Kelas::query("select * from classes where id = " . $id)->fetch();

    static::view('pages.admin.kelas.show', [
      'data' => $class,
      'username' => $data['username']
    ]);
  }

  /**
   * Update specified resource.
   *
   * @return void
   */
  public function update(Request $request) {
    $id = $request->get("id");
    $name = $request->get("name");
    $description = $request->get("description");

    if (empty($id)) {
      return static::view('pages.admin.kelas.index', [
        'error' => 'ID tidak boleh kosong'
      ]);
    }

    if (empty($name) || empty($description)) {
      return static::view('pages.admin.kelas.index', [
        'error' => 'Nama dan deskripsi tidak boleh kosong'
      ]);
    }

    Kelas::query("update classes set name = '" . $name . "', description = '" . $description . "' where id = " . $id);

    return $this->index();
  }

  /**
   * Delete specified resource.
   *
   * @return void
   */
  public function destroy(Request $request) {
    $id = $request->get("id");

    if (empty($id)) {
      return static::view('pages.admin.kelas.index', [
        'error' => 'ID tidak boleh kosong'
      ]);
    }

    Kelas::query("delete from classes where id = " . $id);

    return $this->index();
  }
}
