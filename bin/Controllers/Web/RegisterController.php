<?php

namespace Bin\Controllers\Web;

use Bin\Models\User;
use Snake\Core\Http\Request;
use Bin\Controllers\Controller;

class RegisterController extends Controller {
  /**
   * Display a listing of the resource.
   *
   * @return void
   */
  public function index() {
    static::view('pages.auth.register');
  }

  /**
   * Store a newly created resource in storage.
   *
   * @param  \Snake\Core\Http\Request  $request
   *
   * @return void
   */
  public function store(Request $request) {
    $data = $request->all();

    if (empty($data['name'])) {
      return static::view('pages.auth.login', [
        'error' => 'Nama tidak boleh kosong'
      ]);
    }

    if (empty($data['username'])) {
      return static::view('pages.auth.login', [
        'error' => 'Username tidak boleh kosong'
      ]);
    }

    if (empty($data['password'])) {
      return static::view('pages.auth.login', [
        'error' => 'Password tidak boleh kosong'
      ]);
    }

    if (empty($data['password_confirmation'])) {
      return static::view('pages.auth.login', [
        'error' => 'Password konfirmasi tidak boleh kosong'
      ]);
    }

    if ($data['password'] != $data['password_confirmation']) {
      return static::view('pages.auth.login', [
        'error' => 'Password konfirmasi tidak sama'
      ]);
    }

    if (!empty($data['role']) && !in_array($data['role'], ['USER', 'ADMIN'])) {
      return static::view('pages.auth.login', [
        'error' => 'Terjadi kesalahan pada saat registrasi'
      ]);
    }

    $bypass = false;

    if (empty($data['role'])) {
      $data['role'] = 'user';
    } else {
      $data['role'] = strtolower($data['role']);
      $bypass = true;
    }

    $user = User::query("insert into users (name, username, password, role) values ('" . $data['name'] . "', '" . $data['username'] . "', '" . $data['password'] . "', '" . $data['role'] . "')");
    $user = $user->fetch();

    return static::view('pages.landing', [
      'bypass' => $bypass,
      'type' => 'privilege'
    ]);
  }
}
