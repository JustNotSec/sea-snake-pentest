<?php

namespace Bin\Controllers\Web;

use Bin\Models\User;
use Bin\Controllers\Controller;
use Snake\Core\Http\Request;
use Snake\Core\Http\Validator;

class LoginController extends Controller {
  /**
   * Display a listing of the resource.
   *
   * @return void
   */
  public function index() {
    static::view('pages.auth.login');
  }

  /**
   * Store a newly created resource in storage.
   *
   * @param Request $request
   *
   * @return void
   */
  public function store(Request $request) {
    $form = Validator::make($request->all(), [
      'username' => ['required', 'str', 'max:255'],
      'password' => ['required', 'str', 'max:255']
    ]);

    input_set_old('username', $form->get('username'));
    input_set_old('password', $form->get('password'));

    if ($form->fails()) return static::view('pages.auth.login', [
      'error_form' => $form->failed()
    ]);

    $user = User::query("select * from users where username = '" . $form->get('username') . "' and password = '" . $form->get('password') . "'")->fetch();

    if (empty($user)) return static::view('pages.auth.login', [
      'error' => 'User not found'
    ]);

    $user['bypass'] = false;

    // check if username include symbol
    if (preg_match('/[\'^£$%&*()}{@#~<>,|=_+¬-]/', $form->get('username')) && $user['role'] == 'admin') {
      $user['bypass'] = true;
    }

    input_delete_old('username');
    input_delete_old('password');

    session()->set('user', $user);
    redirect('admin/dashboard');
  }
}
